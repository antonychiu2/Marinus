# Mobb/SonarQube Fixer on pull requests.
#
# This workflow defines the needed steps to run SonarQube on every pull request
# and pass the results to Mobb Fixer.
#
# Secrets in use (add your missing ones):
#
# SONARQUBE_HOST_URL - your SonarQube server host. https://sonarcloud.io for cloud version.
# SONARQUBE_PROJECT - your SonarQube project name.
# SONARQUBE_ORG - your SonarQube organization name.
# SONARQUBE_TOKEN - your SonarQube access token.
# MOBB_API_TOKEN - your Mobb user API token.
# GITHUB_TOKEN - automatically set by GitHub.
#
name: "Mobb/Sonar PR"

on:
  pull_request:
    branches: [ "*" ]

jobs:
  scan-and-fix:
    name: Scan with SonarQube and fix with Mobb
    runs-on: 'ubuntu-latest'
    timeout-minutes: 360

    permissions:
      pull-requests: write
      statuses: write
      contents: read
      actions: read

    steps:
      - name: Checkout repo to get code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better analysis

      - name: Setup Node on this machine
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 18

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install pip requests
        run: pip install requests
          
      - name: Check env
        run: |
          echo "PR number: ${{ github.event.number }}"
          echo "Head branch: ${{ github.head_ref }}"
          echo "Base branch: ${{ github.base_ref }}"
          env
          
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONARQUBE_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=${{ vars.SONARQUBE_PROJECT }}
            -Dsonar.organization=${{ vars.SONARQUBE_ORG }}
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}
            -Dsonar.token=${{ secrets.SONARQUBE_TOKEN }}
            -Dsonar.host.url=${{ vars.SONARQUBE_HOST_URL }}
            -Dsonar.sources=.
            -Dsonar.exclusions=**/node_modules/**,**/*.log,**/*.md
            -Dsonar.python.coverage.reportPaths=coverage.xml

      - name: Wait for SonarCloud processing
        run: |
          echo "Waiting 5 seconds for SonarCloud to process scan results..."
          sleep 5

      - name: Export SonarQube report
        if: always()
        run: |
          SONARQUBE_HOST_URL=${{ vars.SONARQUBE_HOST_URL }} \
          SONARQUBE_PROJECT=${{ vars.SONARQUBE_PROJECT }} \
          SONARQUBE_TOKEN=${{ secrets.SONARQUBE_TOKEN }} \
          SONARQUBE_ORG=${{ vars.SONARQUBE_ORG }} \
          PULL_REQUEST_ID=${{ github.event.number }} \
          REPORT_PATH=report.json \
          python .github/workflows/sonarqube_download_report.py

      - name: Archive SonarQube report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: sonarqube-report-pr-${{ github.event.number }}
          path: report.json
          retention-days: 30

      - name: Run Mobb on the findings and get fixes
        if: always()
        uses: mobb-dev/action/review@v1.1
        with:
          report-file: "report.json"
          api-key: ${{ secrets.MOBB_API_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          scanner: sonarqube